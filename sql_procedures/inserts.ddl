-- Generated by Oracle SQL Developer Data Modeler 18.3.0.268.1156
--   at:        2018-12-27 17:35:39 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

--insert player
CREATE OR REPLACE PROCEDURE insert_player
    (v_player_name in PLAYERS.PLAYER_NAME%type, v_birth_date in VARCHAR,
    v_salary in players.salary%type, v_condition in players.condition%type, v_agent_name in AGENTS.AGENT_NAME%type)
IS
    v_agent_id AGENTS.AGENT_ID%type;
    CURSOR c1 IS SELECT agent_id from AGENTS where agent_name=v_agent_name;
BEGIN
    IF LENGTH(v_player_name) < 3 THEN
        RAISE_APPLICATION_ERROR (-20343 , 'Numele jucatorului trebuie sa contina cel putin 3 caractere!');
    END IF;

    IF v_salary <= 0 OR v_salary > 999999 THEN
        RAISE_APPLICATION_ERROR (-20343 , 'Salariul trebuie sa fie un numar positiv mai mic decat 1000000');
    END IF;

    IF v_agent_name IS NOT NULL THEN
        OPEN c1;
        FETCH c1 into v_agent_id;
        IF c1%ROWCOUNT=0 THEN
            RAISE_APPLICATION_ERROR (-20343 , 'Nu exista nici un agent cu asa nume');
        END IF ;
        CLOSE c1;
    END IF;
    insert into players (player_name, BIRTH_DATE, salary, condition, agent_id) VALUES(v_player_name, TO_DATE(v_birth_date, 'DD-MM-YYYY'), v_salary, v_condition, v_agent_id);
END insert_player;
/

--insert agent
CREATE OR REPLACE PROCEDURE insert_agent
    (v_agent_name in AGENTS.AGENT_NAME%type, v_transfer_commisssion in  AGENTS.TRANSFER_COMMISSION%type)
IS
BEGIN
    IF LENGTH(v_agent_name) < 3 THEN
        RAISE_APPLICATION_ERROR (-20001,'Numele agentului trebuie sa aiba cel putin 3 caractere!' );
    END IF;
    
    IF v_transfer_commisssion < 0 OR v_transfer_commisssion > 100 THEN
        RAISE_APPLICATION_ERROR (-20001,'Comisionul trebuie sa apartina internvalului [0,100].' );
    END IF;
    
    insert into agents (agent_name, TRANSFER_COMMISSION) values(v_agent_name, v_transfer_commisssion);
    EXCEPTION 
        WHEN DUP_VAL_ON_INDEX THEN
            RAISE_APPLICATION_ERROR (-20001,'Agentul cu numele "' || v_agent_name || '" deja exista!' );
END insert_agent;
/

--insert contract
CREATE OR REPLACE PROCEDURE insert_contract
    (v_contract_number in CONTRACTS.CONTRACT_NUMBER%type, v_contract_length in CONTRACTS.CONTRACT_LENGTH%type, v_sign_date in VARCHAR, v_player_name in PLAYERS.PLAYER_NAME%type)
IS
    v_player_id PLAYERS.PLAYER_ID%type;
    CURSOR c1 IS SELECT player_id from players where player_name=v_player_name;
    CURSOR c2 IS SELECT player_id from contracts where player_id=v_player_id;
    num_players number;
BEGIN
    open c1;
    fetch c1 into v_player_id;
    IF c1%ROWCOUNT=0 THEN
        RAISE_APPLICATION_ERROR (-20343 , 'Nu exista nici un jucator cu asa nume');
    END IF ;
    CLOSE c1;
    open c2;
    fetch c2 into num_players;
    IF c2%ROWCOUNT>0 THEN
        RAISE_APPLICATION_ERROR (-20343 , 'Jucatorul "'||v_player_name||'" are deja un contract!');
    END IF ;
    CLOSE c2;
    
    IF v_contract_length < 1 or v_contract_length > 5 THEN
        RAISE_APPLICATION_ERROR (-20343 , 'Lungimea contractului trebuie sa apartina intrecavalului [1,5]');
    END IF;
    
    insert into contracts (contract_number, contract_length, sign_date, player_id) values (v_contract_number, v_contract_length, TO_DATE(v_sign_date, 'DD-MM-YYYY'), v_player_id);
    EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            RAISE_APPLICATION_ERROR (-20001,'Numar contract existent.');
END insert_contract;
/

--insert coach
CREATE OR REPLACE PROCEDURE insert_coach
    (v_coach_name in COACHES.COACH_NAME%type, v_speciality in COACHES.SPECIALITY %type, v_nationality in COACHES.NATIONALITY%type, v_salary in COACHES.SALARY%type)
IS
BEGIN
    IF LENGTH(v_coach_name) < 3 THEN
        RAISE_APPLICATION_ERROR (-20001,'Numele antrenorului trebuie sa aiba cel putin 3 caractere!' );
    END IF;
    IF LENGTH(v_speciality) < 3 THEN
        RAISE_APPLICATION_ERROR (-20001,'Specialitatea antrenorului trebuie sa aiba cel putin 3 caractere!' );
    END IF;
    
    IF v_salary IS NOT NULL AND v_salary < 0 THEN
        RAISE_APPLICATION_ERROR (-20001,'Salariul trebuie sa fie un numar positiv' );
    END IF;
    
    IF v_nationality IS NOT NULL AND LENGTH(v_nationality) < 3 THEN
         RAISE_APPLICATION_ERROR (-20001,'Nationalitatea antrenorului trebuie sa aiba cel putin 3 caractere!' );
    END IF;
    
    insert into coaches (coach_name, speciality, NATIONALITY, salary) values(v_coach_name, v_speciality, v_nationality, v_salary);
    EXCEPTION 
        WHEN DUP_VAL_ON_INDEX THEN
            RAISE_APPLICATION_ERROR (-20001,'Antrenorul cu numele "' || v_coach_name || '" deja exista!' );
END insert_coach;
/

--insert training
CREATE OR REPLACE PROCEDURE insert_training
    (v_naming in TRAINING.NAMING%type, v_continuance in TRAINING.CONTINUANCE%type, v_improvement in TRAINING.IMPROVEMENT%type, v_coach_name in COACHES.COACH_NAME%type)
IS
    v_coach_id COACHES.COACH_ID %type;
BEGIN
    IF v_continuance < 20 or v_continuance > 240 THEN
        RAISE_APPLICATION_ERROR (-20001,'Durata unui antrenament trebuie sa apartina intervalului [20,240] minute.' );
    END IF;
    IF LENGTH(v_naming) < 3 THEN
        RAISE_APPLICATION_ERROR (-20001,'Denumirea antrenamentului trebuie sa contina cel putin 3 caractere!' );
    END IF;
    
    IF v_improvement < 1 or v_improvement > 25 THEN
        RAISE_APPLICATION_ERROR (-20001,'Perfectionarea produsa de antrenament trebuie sa apartina intervalului [1,25].' );
    END IF;
    
    select coach_id into v_coach_id from coaches where coach_name=v_coach_name;
    insert into training (naming, continuance, improvement, coach_id) values(v_naming, v_continuance, v_improvement, v_coach_id);
    exception
        when no_data_found then
            RAISE_APPLICATION_ERROR (-20001,'Antrenorul cu numele "' || v_coach_name || '" nu exista!' );
        WHEN DUP_VAL_ON_INDEX THEN
            RAISE_APPLICATION_ERROR (-20001,'Antrenamentul cu numele "' || v_naming || '" deja exista sau antrenorul cu numele "'|| v_coach_name||'" este ocupat!');
END insert_training;
/